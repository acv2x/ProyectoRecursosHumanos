//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Capa_Datos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using Capa_Entidad;

    public partial class ProyectoASPEntities : DbContext
    {
        public ProyectoASPEntities()
            : base("name=ProyectoASPEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cargos> Cargos { get; set; }
        public virtual DbSet<Departamentos> Departamentos { get; set; }
        public virtual DbSet<Empleados> Empleados { get; set; }
        public virtual DbSet<Licencias> Licencias { get; set; }
        public virtual DbSet<Nominas> Nominas { get; set; }
        public virtual DbSet<Permisos> Permisos { get; set; }
        public virtual DbSet<Salidas> Salidas { get; set; }
        public virtual DbSet<Vacaciones> Vacaciones { get; set; }
    
        public virtual ObjectResult<Empleadaos_Inactivos_Result> Empleadaos_Inactivos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Empleadaos_Inactivos_Result>("Empleadaos_Inactivos");
        }
    
        public virtual ObjectResult<Empleados_Activos_Result> Empleados_Activos(string nombre, Nullable<int> departamento)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var departamentoParameter = departamento.HasValue ?
                new ObjectParameter("Departamento", departamento) :
                new ObjectParameter("Departamento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Empleados_Activos_Result>("Empleados_Activos", nombreParameter, departamentoParameter);
        }
    
        public virtual ObjectResult<PROC_Cargos_Result> PROC_Cargos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_Cargos_Result>("PROC_Cargos");
        }
    
        public virtual ObjectResult<PROC_Departamento_Result> PROC_Departamento()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_Departamento_Result>("PROC_Departamento");
        }
    
        public virtual ObjectResult<PROC_EMPLEADOporMES_Result> PROC_EMPLEADOporMES(string mes)
        {
            var mesParameter = mes != null ?
                new ObjectParameter("Mes", mes) :
                new ObjectParameter("Mes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PROC_EMPLEADOporMES_Result>("PROC_EMPLEADOporMES", mesParameter);
        }
    
        public virtual ObjectResult<Proc_Permisos_Result> Proc_Permisos(Nullable<int> iDEMP)
        {
            var iDEMPParameter = iDEMP.HasValue ?
                new ObjectParameter("IDEMP", iDEMP) :
                new ObjectParameter("IDEMP", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_Permisos_Result>("Proc_Permisos", iDEMPParameter);
        }
    
        public virtual ObjectResult<Proc_SalidasMES_Result> Proc_SalidasMES(string mes)
        {
            var mesParameter = mes != null ?
                new ObjectParameter("Mes", mes) :
                new ObjectParameter("Mes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_SalidasMES_Result>("Proc_SalidasMES", mesParameter);
        }
    
        public virtual ObjectResult<Empleados_Inactivos_Result> Empleados_Inactivos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Empleados_Inactivos_Result>("Empleados_Inactivos");
        }
    
        public virtual ObjectResult<Proc_PermisosEMP_Result> Proc_PermisosEMP(string iDEMP)
        {
            var iDEMPParameter = iDEMP != null ?
                new ObjectParameter("IDEMP", iDEMP) :
                new ObjectParameter("IDEMP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proc_PermisosEMP_Result>("Proc_PermisosEMP", iDEMPParameter);
        }
    
        public virtual ObjectResult<BuscaNomina_Result> BuscaNomina(string año, string mes)
        {
            var añoParameter = año != null ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(string));
    
            var mesParameter = mes != null ?
                new ObjectParameter("mes", mes) :
                new ObjectParameter("mes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BuscaNomina_Result>("BuscaNomina", añoParameter, mesParameter);
        }
    }
}
